{"version":3,"sources":["services/logService.js","services/httpService.js","services/authService.js","component/common/tableHeader.jsx","component/common/tableBody.jsx","component/common/table.jsx","component/common/like.jsx","component/moviesTable.jsx","component/common/listGroup.jsx","component/common/pagination.jsx","services/movieService.js","services/genreService.js","utils/paginate.js","component/searchBox.jsx","component/movies.jsx","component/common/input.jsx","component/common/select.jsx","component/common/form.jsx","component/movieForm.jsx","component/customers.jsx","component/rentals.jsx","component/notFound.jsx","component/navBar.jsx","services/userService.js","component/registerForm.jsx","component/loginForm.jsx","component/logout.jsx","component/common/protectedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["init","log","error","console","axios","defaults","baseURL","process","REACT_APP_API_URL","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","headers","common","email","password","a","http","data","localStorage","setItem","getJwt","getItem","login","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","ex","TableHeader","raiseSort","path","sortColumn","props","order","onSort","renderSortIcon","column","className","this","columns","map","key","onClick","label","Component","TableBody","renderCell","item","content","_","createKey","_id","Table","Like","classes","liked","style","cursor","aria-hidden","MoviesTable","movie","Link","to","title","onLike","deleteColumn","onDelete","user","auth","isAdmin","push","movies","ListGroup","items","textProperty","valueProperty","selectedItem","onItemSelect","defaultProps","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","pages","range","page","movieUrl","id","getMovie","movieId","saveMovie","body","deleteMovie","getGenres","paginate","pageNumber","startIndex","slice","take","value","SearchBox","onChange","type","name","placeholder","e","currentTarget","Movies","state","genres","searchQuery","selectedGenre","handleDelete","originalMovies","filter","m","setState","handleLike","index","indexOf","handlePageChange","handleGenreSelect","genre","handleSearch","query","handleSort","getPagedData","allMovies","filtered","toLowerCase","startsWith","orderBy","totalCount","length","marginBottom","Input","rest","htmlFor","autoFocus","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","erros","errorMessage","disabled","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","GenreId","number","min","max","history","match","params","mapToViewModel","resppnse","replace","populatedGenres","populateMovie","onSubmit","renderInput","renderSelect","renderButton","Customers","Rentals","NotFound","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","Fragment","register","username","RegisterForm","userService","window","location","LoginForm","from","pathname","trim","Redirect","Logout","ProtectedRoute","component","render","Route","App","Switch","exact","Boolean","hostname","ReactDOM","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.8858a980.chunk.js","sourcesContent":["function init() {}\n\nfunction log(error) {\n  console.error(error);\n}\n\nexport default {\n  init,\n  log,\n};\n","import axios from \"axios\";\nimport logger from \"./logService\";\nimport { toast } from \"react-toastify\";\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    logger.log(error);\n    toast.error(\"An unexpected error occurrred.\");\n  }\n\n  return Promise.reject(error);\n});\n\nfunction setJwt(jwt) {\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt,\n};\n","import jwtDecode from \"jwt-decode\";\nimport http from \"./httpService\";\n\nconst apiEndpoint = \"/auth\";\nconst tokenKey = \"token\";\n\nhttp.setJwt(getJwt());\n\nexport async function login(email, password) {\n  const { data: jwt } = await http.post(apiEndpoint, { email, password });\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n}\n\nexport function loginWithJwt(jwt) {\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(\"token\");\n    return jwtDecode(jwt);\n  } catch (ex) {\n    return null;\n  }\n}\n\nexport function getJwt() {\n  return localStorage.getItem(tokenKey);\n}\n\nexport default {\n  login,\n  loginWithJwt,\n  logout,\n  getCurrentUser,\n  getJwt,\n};\n","import React, { Component } from 'react';\n\n\n// columns; array\n// sortColumn: object\n// onSort: function\n\nclass TableHeader extends Component {\n    raiseSort = path => {\n        const sortColumn = {...this.props.sortColumn};\n        if (sortColumn.path === path)\n          sortColumn.order = (sortColumn.order === 'asc') ? 'desc' : 'asc';\n        else {\n            sortColumn.path = path;\n            sortColumn.order = 'asc';\n        } \n        this.props.onSort(sortColumn);\n    };\n\n    renderSortIcon = column => {\n        const { sortColumn } = this.props;\n\n        if (column.path !== sortColumn.path) return null;\n        if (sortColumn.order === 'asc') return <i className=\"fa fa-sort-asc\"/>;\n        return <i className=\"fa fa-sort-desc\"></i>\n    }\n   \n    render() { \n        return ( <thead>\n            <tr>\n               {this.props.columns.map(column => (\n               <th \n               className=\"clickable\"\n               key={column.path || column.key } \n               onClick={() => this.raiseSort (column.path)}>\n                   { column.label } {this.renderSortIcon(column)}</th> \n               ))}\n            </tr>\n        </thead>\n\n         );\n    }\n}\n \nexport default TableHeader ;","import React, { Component } from 'react';\nimport _ from 'lodash';\n\nclass TableBody extends Component {\n    renderCell = (item, column) => {\n        if (column.content) return column.content(item);\n\n    return _.get (item, column.path)        \n    }\n\n    createKey = (item, column) => {\n        return item._id + (column.path || column.key);\n    }\n    \n    render() { \n        const{data,columns} = this.props;\n\n        return (<tbody>\n            {data.map(item => (\n                <tr key={item._id}>\n                    {columns.map(column => (\n                    <td key={this.createKey(item,column)}>\n                        {this.renderCell(item, column)}\n                    </td>))}\n                \n                </tr>))}\n           \n        </tbody> ); \n    }\n} \n \nexport default TableBody;","import React, { Component } from 'react';\nimport TableHeader from './tableHeader';\nimport TableBody from './tableBody';\n\nconst Table = ({ columns, sortColumn, onSort, data}) => {\n    return ( \n    <table className=\"table\">\n    <TableHeader \n    columns={columns}\n    sortColumn={sortColumn}\n    onSort={onSort}\n    />\n    <TableBody columns={columns} data={data}/>\n\n</table> );\n}\n \nexport default Table;","import React from 'react';\n\nconst Like = props => {\n     let classes = \"fa fa-heart\";\n        if (!props.liked) classes += \"-o\"\n        return (<i onClick={props.onClick} \n            style={{cursor:'pointer'}}\n            className={classes} aria-hidden=\"true\"></i> );\n}\n \nexport default Like;","import React, { Component } from 'react';\nimport auth from '../services/authService'\nimport Table from './common/table'\nimport Like from \"./common/like\";\nimport { Link } from 'react-router-dom';\n\n\nclass MoviesTable extends Component {\n    columns = [\n        { path: 'title', \n        label: 'Title', \n        content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\n    },\n        { path: 'genre.name', label: 'Genre'},\n        { path: 'numberInStock', label: 'Stock'},\n        { path: 'dailyRentalRate', label: 'Rate'},\n        { \n            key: \"like\", \n            content: movie => (\n            <Like liked={movie.liked} onClick= {() => this.props.onLike (movie)}/>\n        )},\n        \n    ];\n\n    deleteColumn = {\n        key: \"delete\", \n        content: movie => (\n        <button \n        onClick={() => this.props.onDelete(movie)} \n        className=\"btn btn-danger btn-sm\"\n        >\n          Delete\n        </button>)\n    }\n\n\n    constructor() {\n        super ();\n        const user = auth.getCurrentUser();\n        if (user && user.isAdmin)\n        this.columns.push(this.deleteColumn);\n    }\n\n    render() {\n        const { movies, onDelete, onLike, onSort, sortColumn} = this.props;\n\n        return ( \n            < Table \n            columns={this.columns} \n            data={movies} \n            sortColumn={sortColumn} \n            onSort={onSort}/>\n         );\n     \n    }\n}\n \n \nexport default MoviesTable;","import React from 'react';\n\nconst ListGroup = props => {\n    const {\n        items, \n        textProperty, \n        valueProperty, \n        selectedItem, \n        onItemSelect\n    } = props;\n\n    return (\n     <ul className=\"list-group\">\n         { items.map(item => ( \n         <li \n         onClick={() => onItemSelect(item)} \n         key={item[valueProperty]} \n         className={ \n             item === selectedItem ? \"list-group-item active\" : \"list-group-item\"}\n         >\n          {item[textProperty]}\n        </li>\n        ))}\n    </ul>\n    )\n         }\n\nListGroup.defaultProps = {\n    textProperty: \"name\",\n    valueProperty: \"_id\"\n}\n\n \nexport default ListGroup;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from \"lodash\";\n\nconst Pagination = props => {\n    const {itemsCount, pageSize, currentPage, onPageChange} = props;\n    console.log(currentPage);\n\n    const pagesCount = itemsCount / pageSize;\n    const pages = _.range(1, pagesCount + 1);\n\n    return <nav>\n        <ul className=\"pagination\">\n            {pages.map(page => (\n            <li key={page}\n            className={ page === currentPage ? 'page-item active' : 'page-item'}>\n                <a className=\"page-link\" onClick={() => onPageChange(page)}>\n                {page}\n                </a>\n            </li>\n            ))}\n            \n        </ul>\n    </nav>;\n};\n\nPagination.propTypes = {\n    itemsCount: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired, \n    currentPage: PropTypes.number.isRequired, \n    onPageChange: PropTypes.func.isRequired\n}\n \nexport default Pagination;","import http from \"./httpService\";\n\nconst apiEndpoint = \"/movies\";\n\nfunction movieUrl(id) {\n  return `${apiEndpoint}/${id}`;\n}\n\nexport function getMovies() {\n  return http.get(apiEndpoint);\n}\n\nexport function getMovie(movieId) {\n  return http.get(movieUrl(movieId));\n}\n\nexport function saveMovie(movie) {\n  if (movie._id) {\n    const body = { ...movie };\n    delete body._id;\n    return http.put(movieUrl(movie._id), body);\n  }\n\n  return http.post(apiEndpoint, movie);\n}\n\nexport function deleteMovie(movieId) {\n  return http.delete(movieUrl(movieId));\n}\n","import http from \"./httpService\";\n\nexport function getGenres() {\n  return http.get(\"/genres\");\n}\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(items)\n    .slice(startIndex)\n    .take(pageSize)\n    .value();\n}\n","import React, { Component } from 'react';\n\nconst SearchBox = ({ value, onChange }) => {\n    return ( \n        <input \n        type=\"text\"\n        name=\"query\"\n        className=\"form-control my-3\"\n        placeholder=\"Search...\"\n        value={value}\n        onChange={e => onChange(e.currentTarget.value)}\n        />\n     );\n}\n \nexport default SearchBox;","import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport MoviesTable from './moviesTable';\nimport ListGroup from \"./common/listGroup\";\nimport Pagination from './common/pagination';\nimport { getMovies, deleteMovie } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\nimport { paginate } from \"../utils/paginate\";\nimport { Link } from 'react-router-dom';\nimport _ from 'lodash';\nimport SearchBox from \"./searchBox\";\n\nclass Movies extends Component {\n    state = { \n        movies: [],\n        genres: [],\n        currentPage:1,\n        pageSize: 4,\n        searchQuery: \"\",\n        selectedGenre: null,\n        sortColumn: { path: 'title', order: 'asc'}\n     }\n\n     async componentDidMount() {\n        const { data } = await getGenres();\n        const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\n        const { data: movies } = await getMovies();\n        this.setState({ movies, genres });\n      }\n      \n    handleDelete = async movie => {\n        const originalMovies = this.state.movies;\n        const movies = originalMovies.filter(m => m._id !== movie._id)\n        this.setState({movies});\n\n        try {\n            await deleteMovie(movie._id);\n        }\n        catch (ex) {\n            if (ex.response && ex.response.status === 404)\n                toast.error('This movie has already been deleted.');\n\n            this.setState({ movies: originalMovies });    \n        }\n    }\n\n    handleLike = movie => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = {...movies[index]}\n    movies[index].liked = !movies[index].liked;\n    this.setState({movies});\n    \n}\n\n    handlePageChange = page => { \n        this.setState({currentPage: page});\n    }\n\n    handleGenreSelect = genre => {\n        this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage:1});\n    } \n\n    handleSearch = query => {\n        this.setState({ searchQuery: query, selectedGenre: null, currentPage:1 })\n    }\n\n    handleSort = sortColumn =>  {\n        this.setState({ sortColumn });\n    }\n    \n    getPagedData = () => {\n        const {\n            pageSize,\n            currentPage, \n            sortColumn, \n            selectedGenre, \n            searchQuery,\n            movies: allMovies\n        } = this.state; \n\n        let filtered = allMovies;\n        if(searchQuery)\n            filtered = allMovies.filter(m => \n                m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\n        );\n        else if (selectedGenre && selectedGenre._id)\n            filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\n\n        const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n        const movies = paginate(sorted, currentPage, pageSize);\n\n        return {totalCount: filtered.length, data: movies };\n    };\n\n    render() { \n        const {length: count} = this.state.movies;\n        const {\n            pageSize,\n            currentPage, \n            sortColumn,\n            searchQuery\n        } = this.state; \n        const { user } = this.props;\n\n           const {totalCount, data: movies}= this.getPagedData();\n\n        return (\n            <div className=\"row\"> \n                <div className=\"col-3\">\n                  <ListGroup \n                    items={this.state.genres} \n                    selectedItem={this.state.selectedGenre}\n                    onItemSelect={this.handleGenreSelect} \n                    />\n                </div>\n                <div className=\"col\">\n                  {user && (<Link\n                    to=\"/movies/new\"\n                    className=\"btn btn-primary\"\n                    style={{ marginBottom: 20 }}\n                  >\n                    New Movie\n                </Link>\n                  )}\n                <p> Showing {totalCount} movies in the database.</p>\n        <SearchBox value={searchQuery} onChange={this.handleSearch}/>\n        < MoviesTable \n            movies={movies} \n            sortColumn={sortColumn}\n            onLike={this.handleLike} \n            onDelete={this.handleDelete}\n            onSort={this.handleSort}/>\n        <Pagination \n           itemsCount={totalCount} \n           pageSize={pageSize}\n           currentPage={currentPage}\n           onPageChange={this.handlePageChange}\n           />\n        </div>\n        </div>\n        )\n    }; \n}\n \nexport default Movies;  ","import React, { Component } from 'react';\n\nconst Input = ({ name, label, error, ...rest }) => {\n    return ( \n        <div className=\"form-group\">\n                    <label htmlFor={name}>{ label }</label>\n                    <input autoFocus \n                    {...rest}\n                    id={name} \n                    name={name}\n                    className=\"form-control\"/>\n\n                   {error && <div className=\"alert alert-danger\">{error}</div>}\n                </div>\n     );\n}\n \nexport default Input;","import React, { Component } from 'react';\n\nconst Select = ({ name, label, options, error, ...rest }) => {\n    return (  \n      <div className=\"form-group\">\n          <label htmlFor={name}>{label}</label>\n          <select name={name} id={name} {...rest} className=\"form-control\">\n              <option value=\"\" />\n              {options.map(option => (\n                <option key={option._id} value={option._id}>\n                    {option.name}\n                </option>\n              ))}\n          </select>\n          {error && <div className=\"alert alert-danger\">{error} </div>}\n      </div>  \n    );\n}\n \nexport default Select;","import React, { Component } from 'react';\nimport Joi from \"joi-browser\";\nimport Input from './input';\nimport Select from './select';\n\nclass Form extends Component {\n    state = { \n        data: {},\n        errors: {}\n     };\n     validate = () => {\n        const options = { abortEarly: false };\n        const { error } = Joi.validate(this.state.data, this.schema, options);\n        if (!error) return null;\n       \n        const errors = {};\n        for (let item of error.details)\n          errors[item.path[0]] = item.message;\n        return errors;\n    }\n\n    validateProperty = ({ name, value }) => {\n        const obj = { [name]: value };\n        const schema = { [name]: this.schema[name] };\n        const { error } = Joi.validate(obj.schema);\n        return error ? error.details[0].message : null;\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n\n        const errors = this.validate();\n        this.setState({ errors: errors || {} });\n        if (errors) return;\n\n        this.doSubmit();\n    }\n\n    handleChange = ({ currentTarget: input }) => { //object destructuring\n        const errors = {...this.state.erros};\n        const errorMessage = this.validateProperty(input);\n        if (errorMessage) errors[input.name] = errorMessage;\n        else delete errors[input.name];\n        const data = { ...this.state.data };\n        data[input.name] = input.value;\n        this.setState({ data, errors });   \n       }; \n       // This is sooooo important, Dena!\n\n       renderButton(label) {\n           return  <button disabled={this.validate()} className=\"btn btn-primary\">{label}</button>\n       }\n\n       renderSelect(name, label, options) {\n        const { data,errors } = this.state;\n\n        return ( \n            <Select \n            name={name}\n            value={data[name]}\n            label={label}\n            options={options}\n            onChange={this.handleChange}\n            error={errors[name]}\n            />\n        )\n       }\n\n\n       renderInput (name, label, type = \"text\") {\n          const { data, errors } = this.state;\n \n           return (\n            <Input \n            type={type}\n            name={name}\n            value={data[name]}\n            label={label}\n            onChange={this.handleChange}\n            error={errors[name]}\n           />\n           )\n           \n       }\n}\n \nexport default Form;","import React, { Component } from 'react';\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { getMovie, saveMovie } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\"\n\nclass MovieForm extends Form {\n    state = {\n        data: {\n            title: \"\",\n            genreId: \"\",\n            numberInStock: \"\",\n            dailyRentalRate: \"\"\n        },\n        genres: [],\n        errors: {}\n    };\n\n    schema = {\n        _id: Joi.string(),\n        title: Joi.string()\n            .required()\n            .label(\"Title\"),\n        GenreId: Joi.number()\n            .required()\n            .label(\"Genre\"),\n        numberInStock: Joi.number()\n            .required()\n            .min(0)\n            .max(100)\n            .label (\"Number in Stock\"),\n        dailyRentalRate: Joi.number()\n            .required()\n            .min(0)\n            .max(10)\n            .label(\"Daily Rental Rate\")  \n    }\n\n    async populatedGenres() {\n        const { data: genres } = await getGenres();\n        this.setState({ genres });\n\n    }\n\n    async populateMovie() {\n       try {\n          const movieId = this.props.match.params.id;\n          if (movieId === \"new\") return;\n\n           const { data: movie } = await getMovie(movieId);        \n           this.setState({ data: this.mapToViewModel(movie) });\n       } catch (ex) {\n       if (ex.response && ex.resppnse.status === 404)\n       this.props.history.replace(\"/not-found\");\n\n       }\n    }\n\n    async componentDidMount() {\n        await this.populatedGenres();\n        await this.populateMovie(); \n    }\n\n    mapToViewModel(movie) {\n        return {\n            _id: movie._id,\n            title: movie.title,\n            genreId: movie.genre._id,\n            numberInStock: movie.numberInStock,\n            dailyRentalRate: movie.dailyRentalRate\n        };\n    }\n\n    doSubmit = async () => {\n        await saveMovie(this.state.data);\n\n        this.props.history.push(\".movies\");\n    };\n\n    render() {\n        return (\n            <div>\n                <h1> Movie Form</h1>\n                <form onSubmit={this.handleSubmit}>\n                    {this.renderInput(\"title\", \"Title\")}\n                    {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\n                    {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\n                    {this.renderInput(\"dailyRentalRate\", \"Rate\")}\n                    {this.renderButton(\"Save\")}\n                </form>\n            </div>\n        );\n    }\n\n\n}\n\n\nexport default MovieForm;","import React, { Component } from 'react';\n\nconst Customers = () => {\n    return <h1>Customers</h1>;\n}\n \nexport default Customers;","import React, { Component } from 'react';\n\nconst Rentals = () => {\n    return <h1> Rentals</h1>;\n}\n \nexport default Rentals;","import React from 'react';\n\nconst NotFound = () => {\n    return <h1>Not Found</h1>;\n}\n \nexport default NotFound;","import React, { Component } from 'react';\nimport { Link, NavLink } from \"react-router-dom\";\n\nconst NavBar = ({ user }) => {\n    return ( \n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <Link className=\"navbar-brand\" to=\"/\">\n    Vidly\n  </Link>\n  <button \n  className=\"navbar-toggler\" \n  type=\"button\" data-toggle=\"collapse\" \n  data-target=\"#navbarNav\" \n  aria-controls=\"navbarNav\" \n  aria-expanded=\"false\" \n  aria-label=\"Toggle navigation\"\n  >\n    <span className=\"navbar-toggler-icon\"></span>\n  </button>\n  <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n    <div className=\"navbar-nav\">\n      \n        <NavLink className=\"nav-link\" to=\"/movies\">\n          Movies <span className=\"sr-only\">(current)</span>\n        </NavLink>\n      \n        <NavLink className=\"nav-link\" to=\"/customers\">\n          Customers\n        </NavLink>\n      \n        <NavLink className=\"nav-link\" to=\"/rentals\">\n          Rentals\n        </NavLink>\n      \n        {!user && (\n          <React.Fragment>\n          <NavLink className=\"nav-link\" to=\"/login\">\n            Login\n          </NavLink>\n          <NavLink className=\"nav-link\" to=\"/register\">\n            Register\n          </NavLink>\n        </React.Fragment>\n        )}   \n      \n      {user && (\n          <React.Fragment>\n          <NavLink className=\"nav-link\" to=\"/profile\">\n            {user.name}\n          </NavLink>\n          <NavLink className=\"nav-link\" to=\"/logout\">\n            Logout\n          </NavLink>\n        </React.Fragment>\n        )}   \n    \n    </div>\n  </div>\n</nav>\n     );\n}\n \nexport default NavBar;","import http from \"./httpService\";\n\nconst apiEndpoint = \"/users\";\n\nexport function register(user) {\n  return http.post(apiEndpoint, {\n    email: user.username,\n    password: user.password,\n    name: user.name,\n  });\n}\n","import React, { Component } from 'react';\nimport Joi from 'joi-browser';\nimport Form from './common/form';\nimport * as userService from '../services/userService';\nimport auth from '../services/authService';\n\n\n\nclass RegisterForm extends Form {\n    state = {\n        data: { username: '', password: '', name: ''},\n        errors: {}\n    };\n\n    schema = {\n        username: Joi.string().required().label(\"Username\"),\n        password: Joi.string().required().min(5).label(\"Password\"),\n        username: Joi.string().required().label(\"Name\"),\n\n    };\n\n    doSubmit = async () => {\n      try {\n        const response = await userService.register(this.state.data);\n        auth.loginWithJwt(response.headers['x-auth-token']);\n        window.location = \"/\";\n;      } catch (ex) {\n          if (ex.response && ex.response.status === 400) {\n            const errors = { ...this.state.errors };\n            errors.username = ex.response.data;\n            this.setState ({ errors });\n      }\n    }\n    }\n    \n    render() { \n        return ( \n           <div>\n            <h1> Register</h1>\n            <form onSubmit={this.handleSubmit}>\n                {this.renderInput('username', 'Username')}\n                {this.renderInput('password', 'Password', 'password')}\n                {this.renderInput('name', 'Name')}\n                {this.renderButton(\"Register\")}\n            </form>\n            </div> \n         );\n    };\n}\nexport default RegisterForm;","import React, { Component } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport Joi from 'joi-browser';\nimport Form from './common/form';\nimport auth from '../services/authService';\n\n\nclass LoginForm extends Form {\n    state = {\n        data: { username: '', password: ''},\n        errors: {}\n    };\n\n    schema = {\n        username: Joi.string().required().label(\"Username\"),\n        password: Joi.string().required().label(\"Password\")\n\n    };\n\n    doSubmit = async () => {\n        try {\n          const { data } = this.state;\n          await auth.login(data.username, data.password);\n          \n          const { state } = this.props.location\n          window.location = state ? state.from.pathname : '/';\n        } catch (ex) {\n          if (ex.response && ex.response.status === 400) {\n              const errors = {...this.state.errors};\n              errors.username = ex.response.data;\n              this.setState({ errors });\n          }\n        }\n\n\n         \n    }\n\n    \n    validateProperty = ({ name, value}) => {\n      if (name === 'username') {\n          if (value.trim() === '') return 'Username is required.';\n      }\n      if (name === 'password') {\n        if (value.trim() === '') return 'Password is required.';\n      }\n    }\n    \n    render() { \n        if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\n\n        return ( \n           <div>\n            <h1> Login</h1>\n            <form onSubmit={this.handleSubmit}>\n                {this.renderInput('username', 'Username')}\n                {this.renderInput('password', 'Password', 'password')}\n                {this.renderButton(\"Login\")}\n            </form>\n            </div> \n         );\n    };\n}\nexport default LoginForm;","import React, { Component } from 'react';\nimport auth from '../services/authService';\n\nclass Logout extends Component {\n  componentDidMount () {\n    auth.logout();\n\n    window.location = '/';\n  }\n\n    render() { \n        return null;\n    }\n}\n \nexport default Logout;","import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport auth from '../../services/authService';\n\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\n    return (  \n        <Route\n              {...rest}\n              render={props => {\n                if (!auth.getCurrentUser()) return <Redirect to={{\n                    pathname: '/login',\n                    state: { from: props.location }\n                }} />;\n                return Component ? <Component {...props} /> : render(props);\n              }}\n            />\n    );\n}\n \nexport default ProtectedRoute;","import React, { Component } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Movies from \"./component/movies\";\nimport MovieForm from \"./component/movieForm\";\nimport Customers from \"./component/customers\";\nimport Rentals from \"./component/rentals\";\nimport NotFound from \"./component/notFound\";\nimport NavBar from \"./component/navBar\";\nimport RegisterForm from \"./component/registerForm\";\nimport LoginForm from \"./component/loginForm\";\nimport Logout from \"./component/logout\";\nimport ProtectedRoute from \"./component/common/protectedRoute\";\nimport auth from \"./services/authService\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar user={user} />\n        <main className=\"Container\">\n          <Switch>\n            <Route path=\"/register\" component={RegisterForm} />\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/logout\" component={Logout} />\n            <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\n            <Route\n              path=\"/movies\"\n              render={(props) => <Movies {...props} user={this.state.user} />}\n            />\n            <Route path=\"/customers\" component={Customers}></Route>\n            <Route path=\"/rentals\" component={Rentals}></Route>\n            <Route path=\"/not-found\" component={NotFound}></Route>\n            <Redirect from=\"/\" exact to=\"/movies\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}